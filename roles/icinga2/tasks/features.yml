---

- name: collect all files in {{ icinga2_config_path + '/features-enabled' }}
  find:
    paths: "{{ icinga2_config_path + '/features-enabled' }}"
    patterns: '*.conf'
    file_type: any
  register: icnga2_collected_features
  when: icinga2_purge_features

- name: collect enabled features
  set_fact:
    features_enabled: "{{ features_enabled|default([]) + [ item.path| basename| splitext | first ] }}"
  loop: "{{ icnga2_collected_features.files }}"
  when: icinga2_purge_features

- name: purge features
  file:
    state: absent
    path: "{{ '/etc/icinga2/features-enabled/' + item + '.conf' }}"
  loop: "{{ features_enabled| difference(icinga2_features| map(attribute='name')) }}"
  notify: reload icinga2 service
  when: icinga2_purge_features

- name: feature {{ item.name }} validate parameters
  fail:
    msg: "value of state must be one of: present, absent, got: {{ item.state }}"  
  with_items: "{{ icinga2_features }}"
  when: item.state is defined and item.state is not in ['present', 'absent']

- name: configure features
  include: "features/{{ item.name }}.yml"
  loop: "{{ icinga2_features }}"
  when: item.state is undefined or item.state != 'absent'
  notify: reload icinga2 service

- name: enable features
  file:
    state: "{{ 'link' if (item.state is undefined or item.state != 'absent') else 'absent' }}"
    path: "{{ '/etc/icinga2/features-enabled/' + item.name + '.conf' }}"
    src: "{{ '../features-available/' + item.name + '.conf' if (item.state is undefined or item.state != 'absent') else omit }}"
  loop: "{{ icinga2_features }}"
  notify: reload icinga2 service

